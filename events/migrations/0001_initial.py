# Generated by Django 2.2.8 on 2021-09-22 22:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('project_reports', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
                ('eligible_elective', models.BooleanField(default=True, help_text='Determines whether or not an event can be counted towards a candidates Elective event requirement.')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='event name')),
                ('restriction', models.PositiveSmallIntegerField(choices=[(0, 'Public'), (1, 'Candidate'), (2, 'Member'), (3, 'Officer'), (4, 'Open (No Signups)')], db_index=True, default=1, help_text='Who can sign up for this? Each restriction level allows users in that category, as well as users with more permissions (e.g., setting the restriction as "Candidate" allows candidates, members, and officers).', verbose_name='minimum restriction')),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('tagline', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('location', models.CharField(max_length=80)),
                ('signup_limit', models.PositiveSmallIntegerField(default=0, help_text='Set as 0 to allow unlimited signups.')),
                ('max_guests_per_person', models.PositiveSmallIntegerField(default=0, help_text='Maximum number of guests each person is allowed to bring.')),
                ('needs_drivers', models.BooleanField(default=False)),
                ('cancelled', models.BooleanField(default=False)),
                ('requirements_credit', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3)], default=1, help_text='Large events can be worth more than 1 candidate requirement credit.')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('committee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.OfficerPosition')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('event_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.EventType')),
                ('project_report', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event', to='project_reports.ProjectReport')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Term')),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
                'permissions': (('contact_participants', 'Can send email to those signed up'),),
                'ordering': ('start_datetime',),
            },
        ),
        migrations.CreateModel(
            name='EventSignUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_guests', models.PositiveSmallIntegerField(default=0, verbose_name='number of guests you are bringing')),
                ('driving', models.PositiveSmallIntegerField(default=0, verbose_name='how many people fit in your car, including yourself (0 if not driving)')),
                ('comments', models.TextField(blank=True, verbose_name='comments (optional)')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, help_text='Your email address will be used to later update your signup or to unsign up.', max_length=254, verbose_name='email address')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('unsignup', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('timestamp',),
                'unique_together': {('event', 'user')},
                'permissions': (('view_signups', 'Can view who has signed up for events'), ('view_comments', 'Can view sign-up comments'), ('view_driving_numbers', 'Can view driving number details')),
            },
        ),
        migrations.CreateModel(
            name='EventAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('event', 'user')},
            },
        ),
    ]
